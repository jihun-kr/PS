{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"PS": {
		"prefix": "algorithm",
		"body": [
			"#include <stdio.h>",
			"#include <string.h>",
			"#include <stdlib.h>",
			"#include <math.h>",
			"#include <iostream>",
			"#include <algorithm>",
			"#include <string>",
			"#include <stack>",
			"#include <queue>",
			"#include <vector>",
			"#include <set>",
			"#include <map>",
			"#include <unordered_set>",
			"#include <unordered_map>",
			"#include <list>",
			"#include <random>",
			"#include <functional>\n",
			"#define INF 2100000000",
			"#define ABS(n) (((n) > 0) ? (n) : -(n))",
			"#define SQR(n) ((n) * (n))\n",
			"typedef long long ll;",
			"typedef unsigned long long llu;\n",
			"using namespace std;\n",
			"int main() {",
			"\t$0\n",
			"\treturn 0;",
			"}"
		]
	}
}